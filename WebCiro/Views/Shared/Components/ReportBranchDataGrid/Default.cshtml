@using DevExtreme.AspNet.Mvc.Builders;
@(Html.DevExtreme().TabPanel()
   .Items(items =>
   {

       items.Add()
          .Title("BU YIL")
          .Template(@<text>
              @(
          Html.DevExtreme().DataGrid<WI_State_Sales>()
          .DataSource(d => d.Mvc().Controller("Dashboard").LoadAction("GetByReportBranchDataGrid"))
          .AllowColumnResizing(true)
          .ColumnMinWidth(50)
          .SearchPanel(s => s
          .Visible(true)
          .HighlightCaseSensitive(true).Width(300)).ElementAttr("class", "uppercase")
          .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
          .ColumnChooser(cc => cc.Enabled(true).Mode(GridColumnChooserMode.Select))
          .Export(e => e
          .Enabled(true)
          .AllowExportSelectedData(true)
          .Formats(new[] { "pdf" }))
          .OnExporting("exporting")
          .Selection(s => s
          .Mode(SelectionMode.Multiple)
          .ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.Always))
          .Paging(paging => paging.PageSize(10))
          .Pager(pager =>
          {
            pager.Visible(true);
            pager.DisplayMode(GridPagerDisplayMode.Full);
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new JS("[5, 10,30,70,120,180, 1000, 'all']"));
            pager.ShowInfo(true);
            pager.ShowNavigationButtons(true);
        })
          .Columns(columns =>
          {
            columns.AddFor(m => m.INVOICE_NUMBER).Caption("FATURA NUMARASI").CssClass("margin-right");
            columns.AddFor(m => m.INVOICE_DATE).Caption("FATURA TARİHİ").CssClass("margin-right");
            columns.AddFor(m => m.CITY).Caption("İL").CssClass("text-left");
            columns.AddFor(m => m.CUSTOMER_CODE).Caption("MÜŞTERİ KODU").CssClass("text-left");
            columns.AddFor(m => m.CUSTOMER_NAME).Caption("MÜŞTERİ ADI").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_CATEGORY).Caption("ÜRÜN KATEGORİSİ").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_BRAND).Caption("ÜRÜN MARKASI").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_CODE).Caption("ÜRÜN KODU").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_NAME).Caption("ÜRÜN ADI").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_QUANTITY).Caption("ÜRÜN MİKTARI").CssClass("text-left");
            columns.AddFor(m => m.NET_AMOUNT).Caption("NET TUTAR").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_SUPPLIER).Caption("ÜRÜN TEDARİKÇİSİ").CssClass("text-left");
        })

          .ColumnAutoWidth(true)
          .Selection(s => s.Mode(SelectionMode.Multiple))
          .Export(e => e.Enabled(true).AllowExportSelectedData(true))
          .FilterRow(f => f.Visible(true))
          .HeaderFilter(f => f.Visible(true))
          .ShowBorders(true)
          .Grouping(g => g.AutoExpandAll(false))
          .ShowBorders(true)
          )
              </text>);

       items.Add()
          .Title("BU AY")
          .Template(@<text>
              @(
          Html.DevExtreme().DataGrid<WI_State_Sales>()
          .DataSource(d => d.Mvc().Controller("Dashboard").LoadAction("GetByReportBranchDataMonthGrid"))
          .AllowColumnResizing(true)
          .ColumnMinWidth(50)
          .SearchPanel(s => s
          .Visible(true)
          .HighlightCaseSensitive(true).Width(300)).ElementAttr("class", "uppercase")
          .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
          .ColumnChooser(cc => cc.Enabled(true).Mode(GridColumnChooserMode.Select))
          .Export(e => e
          .Enabled(true)
          .AllowExportSelectedData(true)
          .Formats(new[] { "pdf" }))
          .OnExporting("exporting")
          .Selection(s => s
          .Mode(SelectionMode.Multiple)
          .ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.Always))
          .Paging(paging => paging.PageSize(10))
          .Pager(pager =>
          {
            pager.Visible(true);
            pager.DisplayMode(GridPagerDisplayMode.Full);
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new JS("[5, 10,30,70,120,180, 1000, 'all']"));
            pager.ShowInfo(true);
            pager.ShowNavigationButtons(true);
        })
          .Columns(columns =>
          {
            columns.AddFor(m => m.INVOICE_MONTH).Caption("FATURA NUMARASI").CssClass("margin-right");
              @* columns.AddFor(m => m.INVOICE_YEAR).Caption("FATURA NUMARASI").CssClass("margin-right"); *@
            columns.AddFor(m => m.INVOICE_NUMBER).Caption("FATURA NUMARASI").CssClass("margin-right");
            columns.AddFor(m => m.INVOICE_DATE).Caption("FATURA TARİHİ").CssClass("margin-right");
            columns.AddFor(m => m.CITY).Caption("İL").CssClass("text-left");
            columns.AddFor(m => m.CUSTOMER_CODE).Caption("MÜŞTERİ KODU").CssClass("text-left");
            columns.AddFor(m => m.CUSTOMER_NAME).Caption("MÜŞTERİ ADI").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_CATEGORY).Caption("ÜRÜN KATEGORİSİ").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_BRAND).Caption("ÜRÜN MARKASI").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_CODE).Caption("ÜRÜN KODU").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_NAME).Caption("ÜRÜN ADI").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_QUANTITY).Caption("ÜRÜN MİKTARI").CssClass("text-left");
              @* columns.AddFor(m => m.NET_AMOUNT).Caption("NET TUTAR").CssClass("text-left"); *@
            columns.AddFor(m => m.PRODUCT_SUPPLIER).Caption("ÜRÜN TEDARİKÇİSİ").CssClass("text-left");
        })

          .ColumnAutoWidth(true)
          .Selection(s => s.Mode(SelectionMode.Multiple))
          .Export(e => e.Enabled(true).AllowExportSelectedData(true))
          .FilterRow(f => f.Visible(true))
          .HeaderFilter(f => f.Visible(true))
          .ShowBorders(true)
          .Grouping(g => g.AutoExpandAll(false))
          .ShowBorders(true)
          )
              </text>);
       items.Add()
.Title("BU HAFTA")
.Template(@<text>
    @(Html.DevExtreme().DataGrid<WI_State_Sales>()
    .DataSource(d => d.Mvc().Controller("Dashboard").LoadAction("GetByReportBranchDataWeekGrid"))
    .AllowColumnResizing(true)
    .ColumnMinWidth(50)
    .SearchPanel(s => s
    .Visible(true)
    .HighlightCaseSensitive(true).Width(300)).ElementAttr("class", "uppercase")
    .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
    .ColumnChooser(cc => cc.Enabled(true).Mode(GridColumnChooserMode.Select))
    .Export(e => e
    .Enabled(true)
    .AllowExportSelectedData(true)
    .Formats(new[] { "pdf" }))
    .OnExporting("exporting")
    .Selection(s => s
    .Mode(SelectionMode.Multiple)
    .ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.Always))
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
            pager.Visible(true);
            pager.DisplayMode(GridPagerDisplayMode.Full);
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new JS("[5, 10,30,70,120,180, 1000, 'all']"));
            pager.ShowInfo(true);
            pager.ShowNavigationButtons(true);
        })
    .Columns(columns =>
    {
            columns.AddFor(m => m.INVOICE_NUMBER).Caption("FATURA NUMARASI").CssClass("margin-right");
            columns.AddFor(m => m.INVOICE_DATE).Caption("FATURA TARİHİ").CssClass("margin-right");
            columns.AddFor(m => m.CITY).Caption("İL").CssClass("text-left");
            columns.AddFor(m => m.CUSTOMER_CODE).Caption("MÜŞTERİ KODU").CssClass("text-left");
            columns.AddFor(m => m.CUSTOMER_NAME).Caption("MÜŞTERİ ADI").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_CATEGORY).Caption("ÜRÜN KATEGORİSİ").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_BRAND).Caption("ÜRÜN MARKASI").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_CODE).Caption("ÜRÜN KODU").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_NAME).Caption("ÜRÜN ADI").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_QUANTITY).Caption("ÜRÜN MİKTARI").CssClass("text-left");
            columns.AddFor(m => m.NET_AMOUNT).Caption("NET TUTAR").CssClass("text-left");
            columns.AddFor(m => m.PRODUCT_SUPPLIER).Caption("ÜRÜN TEDARİKÇİSİ").CssClass("text-left");
        })
    .ColumnAutoWidth(true)
    .Selection(s => s.Mode(SelectionMode.Multiple))
    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .ShowBorders(true)
    .Grouping(g => g.AutoExpandAll(false))
    .ShowBorders(true)
    )
    </text>);
       @* items.Add()
          .Title("Ürün Kampanyası")
          .Template(@<text>
              @(Html.DevExtreme().DataGrid<MotorAsinBasketRobot.Entities.Concrete.ProductsCampaigns>()
          .DataSource(d => d.Mvc().Controller("ClientProductCampaing").LoadAction("ClientProductCampaingList"))
          .AllowColumnResizing(true)
          .ColumnMinWidth(50)
          .SearchPanel(s => s
          .Visible(true)
          .HighlightCaseSensitive(true).Width(300)).ElementAttr("class", "uppercase")
          .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
          .Paging(paging => paging.PageSize(10))
          .Pager(pager =>
          {
            pager.Visible(true);
            pager.DisplayMode(GridPagerDisplayMode.Full);
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new JS("[5, 10,30,70,120,180, 1000, 'all']"));
            pager.ShowInfo(true);
            pager.ShowNavigationButtons(true);
        })
          .Columns(columns =>
          {
            columns.AddFor(m => m.Id).Caption("No").Width(190);
            columns.AddFor(m => m.ProductReferance).Caption("Kampanya Ürün No").CssClass("text-center").Width(190);
            columns.AddFor(m => m.ProductCode).Caption("Kampanya Ürün Kodu").CssClass("text-center");
            columns.AddFor(m => m.ProductGroup).Caption("Kampanya Ürün Grup").CssClass("text-center");
            columns.AddFor(m => m.MinOrder).Caption("Kampanya Minimum Sipariş").CssClass("text-center");
            columns.AddFor(m => m.IsActive).Caption("Kampanya Aktiv Mi?").CssClass("text-center");
        })
          .ColumnAutoWidth(true)
          .Selection(s => s.Mode(SelectionMode.Multiple))
          .Export(e => e.Enabled(true).AllowExportSelectedData(true))
          .FilterRow(f => f.Visible(true))
          .HeaderFilter(f => f.Visible(true))
          .ShowBorders(true)
          .Grouping(g => g.AutoExpandAll(false))
          .ShowBorders(true)
          )
              </text>);
       items.Add()
   .Title("Ürünler")
   .Template(@<text>
       @(
    Html.DevExtreme().DataGrid<MotorAsinBasketRobot.Entities.Concrete.Product>()
    .DataSource(d => d.Mvc().Controller("ClientProduct").LoadAction("GetClientProductList"))
    .AllowColumnResizing(true)
    .ColumnMinWidth(50)
    .SearchPanel(s => s
    .Visible(true)
    .HighlightCaseSensitive(true).Width(300)).ElementAttr("class", "uppercase")
    .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
            pager.Visible(true);
            pager.DisplayMode(GridPagerDisplayMode.Full);
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new JS("[5, 10,30,70,120,180, 1000, 'all']"));
            pager.ShowInfo(true);
            pager.ShowNavigationButtons(true);
        })
    .Columns(columns =>
    {
            columns.AddFor(m => m.Id).Caption("No").Width(190);
            columns.AddFor(m => m.ProductReferance).Caption("Ürün No").CssClass("text-center").Width(190);
            columns.AddFor(m => m.ProductCode).Caption("Ürün Kodu").CssClass("text-center");
            columns.AddFor(m => m.ProductGroup1).Caption("Minimum Sipariş").CssClass("text-center");
            columns.AddFor(m => m.ProductGroup2).Caption("Ürün Grubu").CssClass("text-center");
            columns.AddFor(m => m.ProductGroup3).Caption("Ürün Grubu").CssClass("text-center");
            columns.AddFor(m => m.ProductGroup4).Caption("Ürün Grubu").CssClass("text-center");
            columns.AddFor(m => m.IsActive).Caption("Ürün Aktif Mi?").DataType(GridColumnDataType.Boolean).Width(250);
        })
    .ColumnAutoWidth(true)
    .Selection(s => s.Mode(SelectionMode.Multiple))
    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .ShowBorders(true)
    .Grouping(g => g.AutoExpandAll(false))
    .ShowBorders(true)
    )
       </text>); *@
   })
)
<div id="tabsContainer"></div>

@*

<style>
    .dx-datagrid-headers {
        background-color: #333 !important;
        color: white;
    }

    #redirectButton {
        background-color: black;
        color: white;
        z-index: 5;
        margin-top: 40px;
    }

    .demo-container {
        display: flex;
        justify-content: center;
        height: 450px;
    }

    .buttons-demo {
        width: 600px;
        align-self: center;
    }

    .buttons-column > .column-header {
        flex-grow: 0;
        width: 150px;
        height: 35px;
        font-size: 130%;
        opacity: 0.6;
        text-align: left;
        padding-left: 15px;
    }

    .buttons {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
    }

        .buttons > div {
            width: 300px;
            flex-wrap: nowrap;
            display: flex;
        }

    .buttons-column > div {
        width: 150px;
        height: 50px;
        text-align: center;
    }

    .buttons-column {
        width: 150px;
        justify-content: center;
    }

    .button {
        background-color: #4CAF50; /* Green */
        border: none;
        color: white;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
    }
</style>
<div id="gridContainer">
    <div>
        @(Html.DevExtreme().DataGrid<WI_State_Sales>()
            .DataSource(d => d.Mvc()
            .Controller("Dashboard")
            .LoadAction("GetByReportBranchDataGrid")
            .Key("Id"))
            .ID("Id")
            .ColumnMinWidth(100)
            .ColumnAutoWidth(true)
            .ShowColumnLines(false)
            .ShowRowLines(true)
            .RowAlternationEnabled(true)
            .ShowBorders(false)
            .ColumnChooser(cc => cc.Enabled(true).Mode(GridColumnChooserMode.Select))
            .Export(e => e
            .Enabled(true)
            .AllowExportSelectedData(true)
            .Formats(new[] { "pdf" }))
            .OnExporting("exporting")
            .Selection(s => s
            .Mode(SelectionMode.Multiple)
            .ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.Always))
            .Paging(paging => paging.PageSize(30))
            .Pager(pager =>
            {
                pager.Visible(true);
                pager.DisplayMode(GridPagerDisplayMode.Full);
                pager.ShowPageSizeSelector(true);
                pager.AllowedPageSizes(new JS("[5, 10, 30, 70, 120, 180, 'all']"));
                pager.ShowInfo(true);
                pager.ShowNavigationButtons(true);
            })
            .SearchPanel(s => s.Visible(true).HighlightCaseSensitive(true).Width(300))
            .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
            .Columns(columns =>
            {
                columns.AddFor(m => m.INVOICE_NUMBER).Caption("FATURA NUMARASI").CssClass("margin-right");
                columns.AddFor(m => m.INVOICE_DATE).Caption("FATURA TARİHİ").CssClass("margin-right");
                columns.AddFor(m => m.CITY).Caption("İL").CssClass("text-left");
                columns.AddFor(m => m.CUSTOMER_CODE).Caption("MÜŞTERİ KODU").CssClass("text-left");
                columns.AddFor(m => m.CUSTOMER_NAME).Caption("MÜŞTERİ ADI").CssClass("text-left");
                columns.AddFor(m => m.PRODUCT_CATEGORY).Caption("ÜRÜN KATEGORİSİ").CssClass("text-left");
                columns.AddFor(m => m.PRODUCT_BRAND).Caption("ÜRÜN MARKASI").CssClass("text-left");
                columns.AddFor(m => m.PRODUCT_CODE).Caption("ÜRÜN KODU").CssClass("text-left");
                columns.AddFor(m => m.PRODUCT_NAME).Caption("ÜRÜN ADI").CssClass("text-left");
                columns.AddFor(m => m.PRODUCT_QUANTITY).Caption("ÜRÜN MİKTARI").CssClass("text-left");
                columns.AddFor(m => m.NET_AMOUNT).Caption("NET TUTAR").CssClass("text-left");
                columns.AddFor(m => m.PRODUCT_SUPPLIER).Caption("ÜRÜN TEDARİKÇİSİ").CssClass("text-left");

            })

            .FilterRow(f => f.Visible(true))
            .HeaderFilter(f => f.Visible(true))
            .Height(1000)
            .FocusedRowEnabled(true)

            .Grouping(g => g.AutoExpandAll(false))
            .GroupPanel(p => p.Visible(true))
            .Scrolling(s => s.Mode(GridScrollingMode.Virtual))
            .Grouping(g => g.AutoExpandAll(false)))



    </div>
</div> *@

<script src="~/js/filesaver.min.js"></script>

<script>
    // function printPage() {
    //     var grid = $("#ReportBranch").dxDataGrid("instance");
    //     var gridId = document.getElementById("gridId");
    //     var gridContent = grid.element().clone();
    //     // Your existing printPage logic here
    // }


    function exporting(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('offer');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'offer.xlsx');
            });
        });
    }

    function redirectToUrl() {
        window.location.href = 'https://b4b.motorasin.com/#!/login';
    }
</script>
<script>
    var headerTemplate = function (header, info) {
        $('<div>').html(info.column.caption).appendTo(header);
        header.parent().css("backgroundColor", "skyblue")
    };
</script>

